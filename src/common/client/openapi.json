{
  "openapi": "3.0.2",
  "info": { "title": "Druffle Development API", "version": "0.1.0" },
  "paths": {
    "/api/v1/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Me",
        "description": "Get me. Applicable only for User",
        "operationId": "get_me_api_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserFullResponse" } }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User By Id",
        "description": "Get user by id. Applicable only for Druffler user only",
        "operationId": "get_user_by_id_api_v1_users__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "User Id", "type": "string" },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete User By Id",
        "description": "Delete admin. Set admin is_deleted=True. Applicable only Druffler user",
        "operationId": "delete_user_by_id_api_v1_users__user_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "User Id", "type": "string" },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/users": {
      "put": {
        "tags": ["Users"],
        "summary": "Update User By Me",
        "description": "Update users name. Applicable only for User",
        "operationId": "update_user_by_me_api_v1_users_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserInfoUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login User",
        "description": "Login to user account.",
        "operationId": "login_user_api_v1_users_login_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/JwtToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Signup User",
        "description": "User signup. Applicable only for users",
        "operationId": "signup_user_api_v1_users_signup_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UserCreateRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/email": {
      "post": {
        "tags": ["Users"],
        "summary": "Set User Email",
        "description": "Set email and sent verification email. Applicable only for User",
        "operationId": "set_user_email_api_v1_users_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserInfoUpdateEmailRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/users/email/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "Verify User Email",
        "description": "Verify email. Applicable only for User with Guest Token",
        "operationId": "verify_user_email_api_v1_users_email_verify_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/users/{user_id}/activate": {
      "get": {
        "tags": ["Users"],
        "summary": "Activate User By Id",
        "description": "Activate admin. Applicable only for Druffler user only",
        "operationId": "activate_user_by_id_api_v1_users__user_id__activate_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "User Id", "type": "string" },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/users/{user_id}/deactivate": {
      "get": {
        "tags": ["Users"],
        "summary": "Deactivate User By Id",
        "description": "Deactivate user. Applicable only for Druffler user only",
        "operationId": "deactivate_user_by_id_api_v1_users__user_id__deactivate_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "User Id", "type": "string" },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins/{admin_id}/info": {
      "get": {
        "tags": ["Admins: Info"],
        "summary": "Get Info",
        "description": "Get admin info by id. Applicable only for Admin and Druffler user only",
        "operationId": "get_info_api_v1_admins__admin_id__info_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Admin Id", "type": "string" },
            "name": "admin_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminInfoResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Admins: Info"],
        "summary": "Update Admin Info By Admin Id",
        "description": "Update admin info by admin id. Applicable only for Admin and Druffler user only",
        "operationId": "update_admin_info_by_admin_id_api_v1_admins__admin_id__info_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Admin Id", "type": "string" },
            "name": "admin_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AdminInfoUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminInfoResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins": {
      "get": {
        "tags": ["Admins"],
        "summary": "Get All Admins",
        "description": "Get all admins. Applicable only for Admin user only",
        "operationId": "get_all_admins_api_v1_admins_get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 50 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminListResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins/pwd": {
      "post": {
        "tags": ["Admins"],
        "summary": "Set Pwd",
        "description": "Set password for administrator through guest token.",
        "operationId": "set_pwd_api_v1_admins_pwd_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/NewPasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/JwtToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins/{admin_id}/pwd": {
      "put": {
        "tags": ["Admins"],
        "summary": "Change Admin Pwd",
        "description": "Change admin pwd form. Applicable only for Admin and Druffler user only",
        "operationId": "change_admin_pwd_api_v1_admins__admin_id__pwd_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Admin Id", "type": "string" },
            "name": "admin_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ChangePasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/JwtToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins/pwd/reset": {
      "get": {
        "tags": ["Admins"],
        "summary": "Reset Admin Pwd",
        "description": "Send email with guest token to change pwd. Public Link",
        "operationId": "reset_admin_pwd_api_v1_admins_pwd_reset_get",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UsernameIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/admins/login": {
      "post": {
        "tags": ["Admins"],
        "summary": "Login Admin",
        "description": "Login to administrator account.",
        "operationId": "login_admin_api_v1_admins_login_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/JwtToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/admins/me": {
      "get": {
        "tags": ["Admins"],
        "summary": "Get Me",
        "description": "Get me. Applicable only for Admin",
        "operationId": "get_me_api_v1_admins_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminFullResponse" } }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins/{admin_id}": {
      "get": {
        "tags": ["Admins"],
        "summary": "Get Admin By Id",
        "description": "Get admin by id. Applicable only for Admin and Druffler user only",
        "operationId": "get_admin_by_id_api_v1_admins__admin_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Admin Id", "type": "string" },
            "name": "admin_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Admins"],
        "summary": "Delete Admin By Id",
        "description": "Delete admin. Set admin is_deleted=True. Applicable only for Admin and Druffler user only",
        "operationId": "delete_admin_by_id_api_v1_admins__admin_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Admin Id", "type": "string" },
            "name": "admin_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins/{admin_id}/activate": {
      "get": {
        "tags": ["Admins"],
        "summary": "Activate Admin By Id",
        "description": "Activate admin. Applicable only for Admin and Druffler user only",
        "operationId": "activate_admin_by_id_api_v1_admins__admin_id__activate_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Admin Id", "type": "string" },
            "name": "admin_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/admins/{admin_id}/deactivate": {
      "get": {
        "tags": ["Admins"],
        "summary": "Deactivate Admin By Id",
        "description": "Deactivate admin. Applicable only for Admin and Druffler user only",
        "operationId": "deactivate_admin_by_id_api_v1_admins__admin_id__deactivate_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Admin Id", "type": "string" },
            "name": "admin_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/accounts": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get All Accounts",
        "description": "Get all accounts. Applicable only for Druffler user only",
        "operationId": "get_all_accounts_api_v1_accounts_get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 50 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountsListResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Accounts"],
        "summary": "Create Account",
        "description": "Create new account. Applicable only for Druffler user only",
        "operationId": "create_account_api_v1_accounts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountCreateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/accounts/{account_id}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Accounts By Id",
        "description": "Update account info. Applicable only for Administrative user only",
        "operationId": "get_accounts_by_id_api_v1_accounts__account_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Accounts"],
        "summary": "Update Accounts",
        "description": "Update account info. Applicable only for Administrative user only",
        "operationId": "update_accounts_api_v1_accounts__account_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccountResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Accounts"],
        "summary": "Delete Account By Id",
        "description": "Delete account by id. Applicable for Druffler accounts",
        "operationId": "delete_account_by_id_api_v1_accounts__account_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/accounts/{account_id}/admins": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get All Admins By Account Id",
        "description": "Get all admins. Applicable only for Druffler user only",
        "operationId": "get_all_admins_by_account_id_api_v1_accounts__account_id__admins_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 50 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminListResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Accounts"],
        "summary": "Create Admin",
        "description": "Create new administrator. Applicable only for Druffler user",
        "operationId": "create_admin_api_v1_accounts__account_id__admins_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AdminUpdateRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AdminFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/accounts/{account_id}/admins/full": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get All Admins By Account Id",
        "description": "Get all admins. Applicable only for Druffler user only",
        "operationId": "get_all_admins_by_account_id_api_v1_accounts__account_id__admins_full_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 50 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdminFullListResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/accounts/{account_id}/hotels": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get All Hotels By Account Id",
        "description": "Get all hotels. Applicable only for Druffler user only",
        "operationId": "get_all_hotels_by_account_id_api_v1_accounts__account_id__hotels_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 50 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelListResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Accounts"],
        "summary": "Create Hotel",
        "description": "Create new hotel. Applicable for Administrative account",
        "operationId": "create_hotel_api_v1_accounts__account_id__hotels_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Account Id", "type": "string" },
            "name": "account_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/HotelUpdateRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/drufflers/login": {
      "post": {
        "tags": ["Drufflers"],
        "summary": "Login Druffler",
        "description": "Login to druffler account.",
        "operationId": "login_druffler_api_v1_drufflers_login_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/JwtToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/drufflers/me": {
      "get": {
        "tags": ["Drufflers"],
        "summary": "Get Me",
        "description": "Get me. Applicable only for Druffler",
        "operationId": "get_me_api_v1_drufflers_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DrufflerFullResponse" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/drufflers": {
      "get": {
        "tags": ["Drufflers"],
        "summary": "Get All Drufflers",
        "description": "Get all drufflers. Applicable only for Druffler",
        "operationId": "get_all_drufflers_api_v1_drufflers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Drufflers Api V1 Drufflers Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/DrufflerFullResponse" }
                }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/token/refresh": {
      "post": {
        "tags": ["Token"],
        "summary": "Refresh",
        "operationId": "refresh_api_v1_token_refresh_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RefreshToken" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/JwtToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/token/revoke": {
      "post": {
        "tags": ["Token"],
        "summary": "Revoke All",
        "operationId": "revoke_all_api_v1_token_revoke_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RefreshToken" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/token/administrative/exchange": {
      "post": {
        "tags": ["Token"],
        "summary": "Administrative Exchange",
        "description": "Login to administrator or druffler account.",
        "operationId": "administrative_exchange_api_v1_token_administrative_exchange_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PasswordIn" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/JwtToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/hotels/benefits": {
      "get": {
        "tags": ["Hotel: Benefits"],
        "summary": "Get All Benefits",
        "description": "Get all hotel benefits. Applicable only for Druffler user",
        "operationId": "get_all_benefits_api_v1_hotels_benefits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Benefits Api V1 Hotels Benefits Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/HotelBenefitsResponse" }
                }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Hotel: Benefits"],
        "summary": "Create Benefits",
        "description": "Create new hotel benefits. Applicable only for Druffler user",
        "operationId": "create_benefits_api_v1_hotels_benefits_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelBenefitsCreateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelBenefitsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/benefits/link": {
      "post": {
        "tags": ["Hotel: Benefits"],
        "summary": "Link Benefits",
        "description": "Create Hotel-Benefit link. Applicable only for Administrative user only",
        "operationId": "link_benefits_api_v1_hotels_benefits_link_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/HotelBenefitsLink" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Hotel: Benefits"],
        "summary": "Delete Benefits Link",
        "description": "Delete Hotel-Benefit link. Applicable only for Administrative user only",
        "operationId": "delete_benefits_link_api_v1_hotels_benefits_link_delete",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/HotelBenefitsLink" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/benefits/active": {
      "get": {
        "tags": ["Hotel: Benefits"],
        "summary": "Get Active Benefits",
        "description": "Get all active hotel benefits. Applicable for Administrative accounts",
        "operationId": "get_active_benefits_api_v1_hotels_benefits_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Active Benefits Api V1 Hotels Benefits Active Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/HotelBenefitsResponse" }
                }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/benefits/{benefit_id}": {
      "put": {
        "tags": ["Hotel: Benefits"],
        "summary": "Update Benefits",
        "description": "Update hotel benefit by benefit_id. Applicable only for Druffler user",
        "operationId": "update_benefits_api_v1_hotels_benefits__benefit_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Benefit Id", "type": "string" },
            "name": "benefit_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelBenefitsUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelBenefitsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/accommodations": {
      "get": {
        "tags": ["Hotel: Accommodations"],
        "summary": "Get Accommodations By Hotel Id",
        "description": "Get accommodations by hotel id. Applicable for Administrative accounts",
        "operationId": "get_accommodations_by_hotel_id_api_v1_hotels__hotel_id__accommodations_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelAccommodationsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Hotel: Accommodations"],
        "summary": "Update Accommodations By Hotel Id",
        "description": "Get accommodations by hotel id. Applicable for Administrative accounts",
        "operationId": "update_accommodations_by_hotel_id_api_v1_hotels__hotel_id__accommodations_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelAccommodationsUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelAccommodationsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Hotel: Accommodations"],
        "summary": "Create Accommodations",
        "description": "Create new hotel accommodations. Applicable for Administrative account",
        "operationId": "create_accommodations_api_v1_hotels__hotel_id__accommodations_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelAccommodationsUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelAccommodationsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/address": {
      "get": {
        "tags": ["Hotel: Address"],
        "summary": "Get Address By Hotel Id",
        "description": "Get address by hotel id. Applicable for Administrative accounts",
        "operationId": "get_address_by_hotel_id_api_v1_hotels__hotel_id__address_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelAddressResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Hotel: Address"],
        "summary": "Update Address By Hotel Id",
        "description": "Get address by hotel id. Applicable for Administrative accounts",
        "operationId": "update_address_by_hotel_id_api_v1_hotels__hotel_id__address_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelAddressUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelAddressResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Hotel: Address"],
        "summary": "Create Address",
        "description": "Create new hotel address. Applicable for Administrative account",
        "operationId": "create_address_api_v1_hotels__hotel_id__address_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelAddressUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelAddressResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/messengers": {
      "get": {
        "tags": ["Hotel: Messengers"],
        "summary": "Get Messengers By Hotel Id",
        "description": "Get messengers by hotel id. Applicable for Administrative accounts",
        "operationId": "get_messengers_by_hotel_id_api_v1_hotels__hotel_id__messengers_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelMessengersResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Hotel: Messengers"],
        "summary": "Update Messengers By Hotel Id",
        "description": "Get messengers by hotel id. Applicable for Administrative accounts",
        "operationId": "update_messengers_by_hotel_id_api_v1_hotels__hotel_id__messengers_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelMessengersUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelMessengersResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Hotel: Messengers"],
        "summary": "Create Messengers",
        "description": "Create new hotel messengers. Applicable for Administrative account",
        "operationId": "create_messengers_api_v1_hotels__hotel_id__messengers_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelMessengersUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelMessengersResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/contacts": {
      "get": {
        "tags": ["Hotel: Contacts"],
        "summary": "Get Contacts By Hotel Id",
        "description": "Get contacts by hotel id. Applicable for Administrative accounts",
        "operationId": "get_contacts_by_hotel_id_api_v1_hotels__hotel_id__contacts_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Contacts By Hotel Id Api V1 Hotels  Hotel Id  Contacts Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/HotelContactsResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Hotel: Contacts"],
        "summary": "Update Contacts By Hotel Id",
        "description": "Get contacts by hotel id. Applicable for Administrative accounts",
        "operationId": "update_contacts_by_hotel_id_api_v1_hotels__hotel_id__contacts_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelContactsUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelContactsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Hotel: Contacts"],
        "summary": "Create Contacts",
        "description": "Create new hotel contacts. Applicable for Administrative account",
        "operationId": "create_contacts_api_v1_hotels__hotel_id__contacts_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelContactsUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelContactsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/photos": {
      "get": {
        "tags": ["Hotel: Photos"],
        "summary": "Get Photos By Hotel Id",
        "description": "Get photos by hotel id. Applicable for Administrative accounts",
        "operationId": "get_photos_by_hotel_id_api_v1_hotels__hotel_id__photos_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Photos By Hotel Id Api V1 Hotels  Hotel Id  Photos Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/HotelPhotosResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Hotel: Photos"],
        "summary": "Create Photos",
        "description": "Create new hotel photos. Applicable for Administrative account",
        "operationId": "create_photos_api_v1_hotels__hotel_id__photos_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_photos_api_v1_hotels__hotel_id__photos_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelPhotosResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/photos/{photo_id}": {
      "put": {
        "tags": ["Hotel: Photos"],
        "summary": "Update Photos By Id",
        "description": "Get photos by hotel id. Applicable for Administrative accounts",
        "operationId": "update_photos_by_id_api_v1_hotels__hotel_id__photos__photo_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "Photo Id", "type": "string" },
            "name": "photo_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HotelPhotosUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HotelPhotosResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Hotel: Photos"],
        "summary": "Delete Photos By Id",
        "description": "Delete photos by id. Applicable for Administrative accounts",
        "operationId": "delete_photos_by_id_api_v1_hotels__hotel_id__photos__photo_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "Photo Id", "type": "string" },
            "name": "photo_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/code/{code}": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get Hotel By Code",
        "description": "Get hotel by code. Public Api",
        "operationId": "get_hotel_by_code_api_v1_hotels_code__code__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Code", "type": "string" },
            "name": "code",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/code/{code}/full": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get Hotel By Code",
        "description": "Get hotel by code. Public Api",
        "operationId": "get_hotel_by_code_api_v1_hotels_code__code__full_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Code", "type": "string" },
            "name": "code",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get Hotel By Id",
        "description": "Get hotel by id. Applicable for Administrative accounts",
        "operationId": "get_hotel_by_id_api_v1_hotels__hotel_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Hotels"],
        "summary": "Update Hotel By Id",
        "description": "Update hotel by id. Applicable for Administrative accounts",
        "operationId": "update_hotel_by_id_api_v1_hotels__hotel_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/HotelUpdateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Hotels"],
        "summary": "Delete Hotel By Id",
        "description": "Delete hotel by id. Applicable for Administrative accounts",
        "operationId": "delete_hotel_by_id_api_v1_hotels__hotel_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/full": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get Hotel By Id",
        "description": "Get hotel by id. Applicable for Administrative accounts",
        "operationId": "get_hotel_by_id_api_v1_hotels__hotel_id__full_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/HotelFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/room/services": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get All Room Services By Hotel By Id",
        "description": "Get all room services by hotel id. Applicable for Administrative accounts",
        "operationId": "get_all_room_services_by_hotel_by_id_api_v1_hotels__hotel_id__room_services_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Room Services By Hotel By Id Api V1 Hotels  Hotel Id  Room Services Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomServiceResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/room/services/full": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get All Room Services By Hotel By Id",
        "description": "Get all room services by hotel id. Applicable for Administrative accounts",
        "operationId": "get_all_room_services_by_hotel_by_id_api_v1_hotels__hotel_id__room_services_full_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Room Services By Hotel By Id Api V1 Hotels  Hotel Id  Room Services Full Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomServiceFullResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/rooms": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get All Rooms By Hotel By Id",
        "description": "Get all room services by hotel id. Applicable for Administrative accounts",
        "operationId": "get_all_rooms_by_hotel_by_id_api_v1_hotels__hotel_id__rooms_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Rooms By Hotel By Id Api V1 Hotels  Hotel Id  Rooms Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomsFullResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/hotels/{hotel_id}/rooms/full": {
      "get": {
        "tags": ["Hotels"],
        "summary": "Get All Rooms By Hotel By Id",
        "description": "Get all room services by hotel id. Applicable for Administrative accounts",
        "operationId": "get_all_rooms_by_hotel_by_id_api_v1_hotels__hotel_id__rooms_full_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Rooms By Hotel By Id Api V1 Hotels  Hotel Id  Rooms Full Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomsFullResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/room/services/{room_service_id}/menu": {
      "get": {
        "tags": ["Room Services: Menu"],
        "summary": "Get Menu By Room Service Id",
        "description": "Get menu by room service id. Applicable for Administrative accounts",
        "operationId": "get_menu_by_room_service_id_api_v1_room_services__room_service_id__menu_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Service Id", "type": "string" },
            "name": "room_service_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Menu By Room Service Id Api V1 Room Services  Room Service Id  Menu Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomServiceMenuResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Room Services: Menu"],
        "summary": "Upload Menu",
        "description": "Upload menu. Applicable for Administrative account",
        "operationId": "upload_menu_api_v1_room_services__room_service_id__menu_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Service Id", "type": "string" },
            "name": "room_service_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_menu_api_v1_room_services__room_service_id__menu_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Upload Menu Api V1 Room Services  Room Service Id  Menu Post",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomServiceMenuResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/room/services/{room_service_id}/menu/{menu_id}": {
      "put": {
        "tags": ["Room Services: Menu"],
        "summary": "Update Menu By Id",
        "description": "Update menu by id. Applicable for Administrative accounts",
        "operationId": "update_menu_by_id_api_v1_room_services__room_service_id__menu__menu_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Menu Id", "type": "string" },
            "name": "menu_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomServiceMenuUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomServiceMenuResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Room Services: Menu"],
        "summary": "Delete Menu By Id",
        "description": "Delete menu by id. Applicable for Administrative accounts",
        "operationId": "delete_menu_by_id_api_v1_room_services__room_service_id__menu__menu_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Menu Id", "type": "string" },
            "name": "menu_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/room/services/{room_service_id}/menu/{menu_id}/items": {
      "get": {
        "tags": ["Room Services: Menu"],
        "summary": "Get Menu Items By Menu Id",
        "description": "Get menu items by menu id. Applicable for Administrative accounts",
        "operationId": "get_menu_items_by_menu_id_api_v1_room_services__room_service_id__menu__menu_id__items_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Menu Id", "type": "string" },
            "name": "menu_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Menu Items By Menu Id Api V1 Room Services  Room Service Id  Menu  Menu Id  Items Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomServiceMenuItemResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/room/services/{room_service_id}/menu/{menu_id}/items/{item_id}": {
      "put": {
        "tags": ["Room Services: Menu"],
        "summary": "Update Menu Item By Id",
        "description": "Update menu item by item id. Applicable for Administrative accounts",
        "operationId": "update_menu_item_by_id_api_v1_room_services__room_service_id__menu__menu_id__items__item_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Menu Item Id", "type": "string" },
            "name": "menu_item_id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomServiceMenuItemUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomServiceMenuResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Room Services: Menu"],
        "summary": "Delete Menu Item By Id",
        "description": "Delete menu item by id. Applicable for Administrative accounts",
        "operationId": "delete_menu_item_by_id_api_v1_room_services__room_service_id__menu__menu_id__items__item_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Menu  Item Id", "type": "string" },
            "name": "menu__item_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/room/services": {
      "post": {
        "tags": ["Room Services"],
        "summary": "Create Room Service",
        "description": "Create new room_service. Applicable for Administrative account",
        "operationId": "create_room_service_api_v1_room_services_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomServiceCreateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomServiceResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/room/services/{room_service_id}": {
      "get": {
        "tags": ["Room Services"],
        "summary": "Get Room Service By Id",
        "description": "Get room_service by id. Applicable for Administrative accounts",
        "operationId": "get_room_service_by_id_api_v1_room_services__room_service_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Service Id", "type": "string" },
            "name": "room_service_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomServiceResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Room Services"],
        "summary": "Update Room Service By Id",
        "description": "Update room_service by id. Applicable for Administrative accounts",
        "operationId": "update_room_service_by_id_api_v1_room_services__room_service_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Service Id", "type": "string" },
            "name": "room_service_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomServiceUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomServiceResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Room Services"],
        "summary": "Delete Room Service By Id",
        "description": "Delete room_service by id. Applicable for Administrative accounts",
        "operationId": "delete_room_service_by_id_api_v1_room_services__room_service_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Service Id", "type": "string" },
            "name": "room_service_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomServiceResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/room/services/{room_service_id}/full": {
      "get": {
        "tags": ["Room Services"],
        "summary": "Get Room Service By Id",
        "description": "Get room_service by id. Applicable for Administrative accounts",
        "operationId": "get_room_service_by_id_api_v1_room_services__room_service_id__full_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Service Id", "type": "string" },
            "name": "room_service_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomServiceFullResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms": {
      "post": {
        "tags": ["Rooms"],
        "summary": "Create Room",
        "description": "Create new room. Applicable for Administrative account",
        "operationId": "create_room_api_v1_rooms_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoomsCreateRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RoomsResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/{room_id}": {
      "get": {
        "tags": ["Rooms"],
        "summary": "Get Room By Id",
        "description": "Get room by id. Applicable for Administrative accounts",
        "operationId": "get_room_by_id_api_v1_rooms__room_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Id", "type": "string" },
            "name": "room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RoomsResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "put": {
        "tags": ["Rooms"],
        "summary": "Update Room By Id",
        "description": "Update room by id. Applicable for Administrative accounts",
        "operationId": "update_room_by_id_api_v1_rooms__room_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Id", "type": "string" },
            "name": "room_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoomsUpdateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RoomsResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Rooms"],
        "summary": "Delete Room By Id",
        "description": "Delete room by id. Applicable for Administrative accounts",
        "operationId": "delete_room_by_id_api_v1_rooms__room_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Id", "type": "string" },
            "name": "room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RoomsResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/{room_id}/full": {
      "get": {
        "tags": ["Rooms"],
        "summary": "Get Room By Id",
        "description": "Get room by id. Applicable for Administrative accounts",
        "operationId": "get_room_by_id_api_v1_rooms__room_id__full_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Id", "type": "string" },
            "name": "room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RoomsFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/beds": {
      "get": {
        "tags": ["Rooms: Beds"],
        "summary": "Get All Beds",
        "description": "Get all room beds. Applicable only for Administrative user",
        "operationId": "get_all_beds_api_v1_rooms_beds_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Beds Api V1 Rooms Beds Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomBedsResponse" }
                }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Rooms: Beds"],
        "summary": "Create Bed",
        "description": "Create new bed for rooms. Applicable only for Druffler user",
        "operationId": "create_bed_api_v1_rooms_beds_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomBedsCreateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RoomBedsResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/beds/link": {
      "post": {
        "tags": ["Rooms: Beds"],
        "summary": "Link Beds",
        "description": "Create Room-Bed link. Applicable only for Administrative user only",
        "operationId": "link_beds_api_v1_rooms_beds_link_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoomBedsLinkRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Rooms: Beds"],
        "summary": "Delete Beds Link",
        "description": "Delete Hotel-Benefit link. Applicable only for Administrative user only",
        "operationId": "delete_beds_link_api_v1_rooms_beds_link_delete",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoomBedsLinkRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/{room_id}/photos": {
      "get": {
        "tags": ["Rooms: Photos"],
        "summary": "Get Photos By Room Id",
        "description": "Get photos by room id. Applicable for Administrative accounts",
        "operationId": "get_photos_by_room_id_api_v1_rooms__room_id__photos_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Id", "type": "string" },
            "name": "room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Photos By Room Id Api V1 Rooms  Room Id  Photos Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomPhotosResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Rooms: Photos"],
        "summary": "Create Photos",
        "description": "Create new room photos. Applicable for Administrative account",
        "operationId": "create_photos_api_v1_rooms__room_id__photos_post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Id", "type": "string" },
            "name": "room_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_photos_api_v1_rooms__room_id__photos_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomPhotosResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/{room_id}/photos/{photo_id}": {
      "put": {
        "tags": ["Rooms: Photos"],
        "summary": "Update Photos By Id",
        "description": "Get photos by room id. Applicable for Administrative accounts",
        "operationId": "update_photos_by_id_api_v1_rooms__room_id__photos__photo_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Photo Id", "type": "string" },
            "name": "photo_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomPhotosUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomPhotosResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Rooms: Photos"],
        "summary": "Delete Photos By Id",
        "description": "Delete photos by id. Applicable for Administrative accounts",
        "operationId": "delete_photos_by_id_api_v1_rooms__room_id__photos__photo_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Room Id", "type": "string" },
            "name": "room_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "title": "Photo Id", "type": "string" },
            "name": "photo_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/benefits": {
      "get": {
        "tags": ["Rooms: Benefits"],
        "summary": "Get All Benefits",
        "description": "Get all room benefits. Applicable only for Druffler user",
        "operationId": "get_all_benefits_api_v1_rooms_benefits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Benefits Api V1 Rooms Benefits Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomBenefitsResponse" }
                }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "post": {
        "tags": ["Rooms: Benefits"],
        "summary": "Create Benefits",
        "description": "Create new room benefits. Applicable only for Druffler user",
        "operationId": "create_benefits_api_v1_rooms_benefits_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomBenefitsCreateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomBenefitsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/benefits/link": {
      "post": {
        "tags": ["Rooms: Benefits"],
        "summary": "Link Benefits",
        "description": "Create Room-Benefit link. Applicable only for Administrative user only",
        "operationId": "link_benefits_api_v1_rooms_benefits_link_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoomBenefitsLink" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Rooms: Benefits"],
        "summary": "Delete Benefits Link",
        "description": "Delete Room-Benefit link. Applicable only for Administrative user only",
        "operationId": "delete_benefits_link_api_v1_rooms_benefits_link_delete",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoomBenefitsLink" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/benefits/active": {
      "get": {
        "tags": ["Rooms: Benefits"],
        "summary": "Get Active Benefits",
        "description": "Get all active room benefits. Applicable for Administrative accounts",
        "operationId": "get_active_benefits_api_v1_rooms_benefits_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Active Benefits Api V1 Rooms Benefits Active Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoomBenefitsResponse" }
                }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/rooms/benefits/{benefit_id}": {
      "put": {
        "tags": ["Rooms: Benefits"],
        "summary": "Update Benefits",
        "description": "Update room benefit by benefit_id. Applicable only for Druffler user",
        "operationId": "update_benefits_api_v1_rooms_benefits__benefit_id__put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Benefit Id", "type": "string" },
            "name": "benefit_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoomBenefitsUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoomBenefitsResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/": {
      "post": {
        "tags": ["Orders: User Api"],
        "summary": "Place Order",
        "description": "Place order. Applicable only for users",
        "operationId": "place_order_api_v1_orders__post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/OrderCreateRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/price": {
      "post": {
        "tags": ["Orders: User Api"],
        "summary": "Calculate Order Price",
        "description": "Calculate total price for order. Public link",
        "operationId": "calculate_order_price_api_v1_orders_price_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/OrderCreateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderPrice" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/my/active": {
      "get": {
        "tags": ["Orders: User Api"],
        "summary": "Get My Orders Active",
        "description": "Get user active order. Applicable only for users",
        "operationId": "get_my_orders_active_api_v1_orders_my_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get My Orders Active Api V1 Orders My Active Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/OrderFullResponse" }
                }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/my/history": {
      "get": {
        "tags": ["Orders: User Api"],
        "summary": "Get My Orders History",
        "description": "Get user order history. Applicable only for users",
        "operationId": "get_my_orders_history_api_v1_orders_my_history_get",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Skip", "type": "integer", "default": 0 },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Limit", "type": "integer", "default": 50 },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get My Orders History Api V1 Orders My History Get",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": { "$ref": "#/components/schemas/OrderFullResponse" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/my/{order_id}": {
      "get": {
        "tags": ["Orders: User Api"],
        "summary": "Get My Order Details By Id",
        "description": "Get user order details. Applicable only for users",
        "operationId": "get_my_order_details_by_id_api_v1_orders_my__order_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      },
      "delete": {
        "tags": ["Orders: User Api"],
        "summary": "Cancel Order By Id",
        "description": "Cancel user order. Applicable only for users",
        "operationId": "cancel_order_by_id_api_v1_orders_my__order_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/my/{order_id}/rate": {
      "get": {
        "tags": ["Orders: User Api"],
        "summary": "Rate Order By Id",
        "description": "Rate user order. Applicable only for users",
        "operationId": "rate_order_by_id_api_v1_orders_my__order_id__rate_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/{hotel_id}": {
      "post": {
        "tags": ["Orders: Admin Api"],
        "summary": "Create Order By Hotel Id",
        "description": "Create order. Applicable only for admin",
        "operationId": "create_order_by_hotel_id_api_v1_orders__hotel_id__post",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/OrderCreateRequest" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/{hotel_id}/active": {
      "get": {
        "tags": ["Orders: Admin Api"],
        "summary": "Get All Active Orders By Hotel Id",
        "description": "Get all active orders (new, in-progress and completed, declined today)\nApplicable only for users",
        "operationId": "get_all_active_orders_by_hotel_id_api_v1_orders__hotel_id__active_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Hotel Id", "type": "string" },
            "name": "hotel_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Active Orders By Hotel Id Api V1 Orders  Hotel Id  Active Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/OrderFullResponse" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/{order_id}": {
      "get": {
        "tags": ["Orders: Admin Api"],
        "summary": "Get Order Details By Id",
        "description": "Get order by id. Applicable only for admin",
        "operationId": "get_order_details_by_id_api_v1_orders__order_id__get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/{order_id}/take": {
      "get": {
        "tags": ["Orders: Admin Api"],
        "summary": "Take Order By Id",
        "description": "Take order by id. Applicable only for admin",
        "operationId": "take_order_by_id_api_v1_orders__order_id__take_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/{order_id}/edit": {
      "put": {
        "tags": ["Orders: Admin Api"],
        "summary": "Edit Order By Id",
        "description": "Edit order by id. Applicable only for admin",
        "operationId": "edit_order_by_id_api_v1_orders__order_id__edit_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/OrderUpdateRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/{order_id}/complete": {
      "put": {
        "tags": ["Orders: Admin Api"],
        "summary": "Complete Order By Id",
        "description": "Complete order by id. Applicable only for admin",
        "operationId": "complete_order_by_id_api_v1_orders__order_id__complete_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/orders/{order_id}/decline": {
      "put": {
        "tags": ["Orders: Admin Api"],
        "summary": "Decline Order By Id",
        "description": "Decline order by id. Applicable only for admin",
        "operationId": "decline_order_by_id_api_v1_orders__order_id__decline_put",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Order Id", "type": "string" },
            "name": "order_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/OrderDeclineRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrderFullResponse" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "JWTokenAuth": [] }]
      }
    },
    "/api/v1/ws/notify": {
      "get": {
        "tags": ["WebSocket"],
        "summary": "Notify",
        "description": "Notify all websocket clients\n\n{\n    msg_type: 0,   # MessageType.new\n    order: { \n        order_id: <uuid>,\n        created_at: <time>,\n        owner: None,\n        info: {}    # order info\n    }\n}",
        "operationId": "notify_api_v1_ws_notify_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["WebSocket Test Html Page"],
        "summary": "Get",
        "operationId": "get__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountCreateRequest": {
        "title": "AccountCreateRequest",
        "required": ["contact_name", "contact_phone"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "contact_name": { "title": "Contact Name", "type": "string" },
          "contact_phone": { "title": "Contact Phone", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "agreement": { "title": "Agreement", "type": "string" }
        }
      },
      "AccountResponse": {
        "title": "AccountResponse",
        "required": ["contact_name", "contact_phone", "id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean", "default": false },
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "contact_name": { "title": "Contact Name", "type": "string" },
          "contact_phone": { "title": "Contact Phone", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "agreement": { "title": "Agreement", "type": "string" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "AccountUpdateRequest": {
        "title": "AccountUpdateRequest",
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "contact_name": { "title": "Contact Name", "type": "string" },
          "contact_phone": { "title": "Contact Phone", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false }
        }
      },
      "AccountsListResponse": {
        "title": "AccountsListResponse",
        "required": ["data", "count"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccountResponse" }
          },
          "count": { "title": "Count", "type": "integer" }
        }
      },
      "AdminFullListResponse": {
        "title": "AdminFullListResponse",
        "required": ["data", "count"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdminFullResponse" }
          },
          "count": { "title": "Count", "type": "integer" }
        }
      },
      "AdminFullResponse": {
        "title": "AdminFullResponse",
        "required": [
          "id",
          "username",
          "admin_type",
          "is_active",
          "is_deleted",
          "created_at",
          "updated_at",
          "info"
        ],
        "type": "object",
        "properties": {
          "role": { "title": "Role", "type": "string" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "username": { "title": "Username", "type": "string", "format": "email" },
          "admin_type": { "$ref": "#/components/schemas/AdminTypes" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "created_at": { "title": "Created At", "type": "string", "format": "date-time" },
          "updated_at": { "title": "Updated At", "type": "string", "format": "date-time" },
          "info": { "$ref": "#/components/schemas/AdminInfoResponse" }
        }
      },
      "AdminInfoResponse": {
        "title": "AdminInfoResponse",
        "required": ["phone"],
        "type": "object",
        "properties": {
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "email": { "title": "Email", "type": "string" },
          "phone": { "title": "Phone", "type": "string" },
          "position": { "title": "Position", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "birthday": { "title": "Birthday", "type": "string", "format": "date-time" }
        }
      },
      "AdminInfoUpdateRequest": {
        "title": "AdminInfoUpdateRequest",
        "required": ["phone"],
        "type": "object",
        "properties": {
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "email": { "title": "Email", "type": "string" },
          "phone": { "title": "Phone", "type": "string" },
          "position": { "title": "Position", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "birthday": { "title": "Birthday", "type": "string", "format": "date-time" }
        }
      },
      "AdminListResponse": {
        "title": "AdminListResponse",
        "required": ["data", "count"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdminResponse" }
          },
          "count": { "title": "Count", "type": "integer" }
        }
      },
      "AdminResponse": {
        "title": "AdminResponse",
        "required": [
          "id",
          "username",
          "admin_type",
          "is_active",
          "is_deleted",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "role": { "title": "Role", "type": "string" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "username": { "title": "Username", "type": "string", "format": "email" },
          "admin_type": { "$ref": "#/components/schemas/AdminTypes" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "created_at": { "title": "Created At", "type": "string", "format": "date-time" },
          "updated_at": { "title": "Updated At", "type": "string", "format": "date-time" }
        }
      },
      "AdminTypes": {
        "title": "AdminTypes",
        "enum": ["Administrator", "Employee"],
        "description": "An enumeration."
      },
      "AdminUpdateRequest": {
        "title": "AdminUpdateRequest",
        "required": ["admin_type", "username", "info"],
        "type": "object",
        "properties": {
          "admin_type": { "$ref": "#/components/schemas/AdminTypes" },
          "username": { "title": "Username", "type": "string", "format": "email" },
          "info": { "$ref": "#/components/schemas/AdminInfoUpdateRequest" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" }
        }
      },
      "Body_create_photos_api_v1_hotels__hotel_id__photos_post": {
        "title": "Body_create_photos_api_v1_hotels__hotel_id__photos_post",
        "required": ["file"],
        "type": "object",
        "properties": { "file": { "title": "File", "type": "string", "format": "binary" } }
      },
      "Body_create_photos_api_v1_rooms__room_id__photos_post": {
        "title": "Body_create_photos_api_v1_rooms__room_id__photos_post",
        "required": ["file"],
        "type": "object",
        "properties": { "file": { "title": "File", "type": "string", "format": "binary" } }
      },
      "Body_upload_menu_api_v1_room_services__room_service_id__menu_post": {
        "title": "Body_upload_menu_api_v1_room_services__room_service_id__menu_post",
        "required": ["file"],
        "type": "object",
        "properties": { "file": { "title": "File", "type": "string", "format": "binary" } }
      },
      "ChangePasswordIn": {
        "title": "ChangePasswordIn",
        "required": ["old_password", "new_password"],
        "type": "object",
        "properties": {
          "old_password": { "title": "Old Password", "type": "string" },
          "new_password": { "title": "New Password", "type": "string" }
        }
      },
      "ContactTypes": {
        "title": "ContactTypes",
        "enum": ["Administrator", "Reception", "Other"],
        "description": "An enumeration."
      },
      "DrufflerFullResponse": {
        "title": "DrufflerFullResponse",
        "required": ["id", "username", "is_active", "is_deleted", "created_at", "updated_at"],
        "type": "object",
        "properties": {
          "role": { "title": "Role", "type": "string" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "username": { "title": "Username", "type": "string", "format": "email" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "created_at": { "title": "Created At", "type": "string", "format": "date-time" },
          "updated_at": { "title": "Updated At", "type": "string", "format": "date-time" },
          "info": { "$ref": "#/components/schemas/DrufflerInfoResponse" }
        }
      },
      "DrufflerInfoResponse": {
        "title": "DrufflerInfoResponse",
        "required": ["phone", "position", "description"],
        "type": "object",
        "properties": {
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "email": { "title": "Email", "type": "string" },
          "phone": { "title": "Phone", "type": "string" },
          "position": { "title": "Position", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "birthday": { "title": "Birthday", "type": "string", "format": "date-time" }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "HotelAccommodations": {
        "title": "HotelAccommodations",
        "required": ["hotel_id", "check_in", "check_out", "children_allowed", "home_pet_allowed"],
        "type": "object",
        "properties": {
          "created_at": { "title": "Created At", "type": "string", "format": "date-time" },
          "updated_at": { "title": "Updated At", "type": "string", "format": "date-time" },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid" },
          "check_in": { "title": "Check In", "type": "string", "format": "time" },
          "check_out": { "title": "Check Out", "type": "string", "format": "time" },
          "breakfast_start": { "title": "Breakfast Start", "type": "string", "format": "time" },
          "breakfast_end": { "title": "Breakfast End", "type": "string", "format": "time" },
          "weekend_breakfast_start": {
            "title": "Weekend Breakfast Start",
            "type": "string",
            "format": "time"
          },
          "weekend_breakfast_end": {
            "title": "Weekend Breakfast End",
            "type": "string",
            "format": "time"
          },
          "children_allowed": { "title": "Children Allowed", "type": "boolean" },
          "children_age_range": { "title": "Children Age Range", "type": "string" },
          "children_cost": { "title": "Children Cost", "type": "string" },
          "home_pet_allowed": { "title": "Home Pet Allowed", "type": "boolean" },
          "pet_weight": { "title": "Pet Weight", "type": "string" },
          "pet_deposit": { "title": "Pet Deposit", "type": "string" }
        },
        "description": "Base Model: should be Parent for every database model"
      },
      "HotelAccommodationsResponse": {
        "title": "HotelAccommodationsResponse",
        "required": [
          "check_in",
          "check_out",
          "children_allowed",
          "home_pet_allowed",
          "hotel_id",
          "id"
        ],
        "type": "object",
        "properties": {
          "check_in": { "title": "Check In", "type": "string", "format": "time" },
          "check_out": { "title": "Check Out", "type": "string", "format": "time" },
          "breakfast_start": { "title": "Breakfast Start", "type": "string", "format": "time" },
          "breakfast_end": { "title": "Breakfast End", "type": "string", "format": "time" },
          "weekend_breakfast_start": {
            "title": "Weekend Breakfast Start",
            "type": "string",
            "format": "time"
          },
          "weekend_breakfast_end": {
            "title": "Weekend Breakfast End",
            "type": "string",
            "format": "time"
          },
          "children_allowed": { "title": "Children Allowed", "type": "boolean" },
          "children_age_range": { "title": "Children Age Range", "type": "string" },
          "children_cost": { "title": "Children Cost", "type": "string" },
          "home_pet_allowed": { "title": "Home Pet Allowed", "type": "boolean" },
          "pet_weight": { "title": "Pet Weight", "type": "string" },
          "pet_deposit": { "title": "Pet Deposit", "type": "string" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "HotelAccommodationsUpdateRequest": {
        "title": "HotelAccommodationsUpdateRequest",
        "required": ["check_in", "check_out", "children_allowed", "home_pet_allowed"],
        "type": "object",
        "properties": {
          "check_in": { "title": "Check In", "type": "string", "format": "time" },
          "check_out": { "title": "Check Out", "type": "string", "format": "time" },
          "breakfast_start": { "title": "Breakfast Start", "type": "string", "format": "time" },
          "breakfast_end": { "title": "Breakfast End", "type": "string", "format": "time" },
          "weekend_breakfast_start": {
            "title": "Weekend Breakfast Start",
            "type": "string",
            "format": "time"
          },
          "weekend_breakfast_end": {
            "title": "Weekend Breakfast End",
            "type": "string",
            "format": "time"
          },
          "children_allowed": { "title": "Children Allowed", "type": "boolean" },
          "children_age_range": { "title": "Children Age Range", "type": "string" },
          "children_cost": { "title": "Children Cost", "type": "string" },
          "home_pet_allowed": { "title": "Home Pet Allowed", "type": "boolean" },
          "pet_weight": { "title": "Pet Weight", "type": "string" },
          "pet_deposit": { "title": "Pet Deposit", "type": "string" }
        }
      },
      "HotelAddressResponse": {
        "title": "HotelAddressResponse",
        "required": ["hotel_id", "id"],
        "type": "object",
        "properties": {
          "country": { "title": "Country", "type": "string" },
          "city": { "title": "City", "type": "string" },
          "street": { "title": "Street", "type": "string" },
          "building": { "title": "Building", "type": "string" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "HotelAddressUpdateRequest": {
        "title": "HotelAddressUpdateRequest",
        "type": "object",
        "properties": {
          "country": { "title": "Country", "type": "string" },
          "city": { "title": "City", "type": "string" },
          "street": { "title": "Street", "type": "string" },
          "building": { "title": "Building", "type": "string" }
        }
      },
      "HotelBenefitsCreateRequest": {
        "title": "HotelBenefitsCreateRequest",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "icon": { "title": "Icon", "type": "string", "format": "binary" },
          "description": { "title": "Description", "type": "string" },
          "is_popular": { "title": "Is Popular", "type": "boolean", "default": false },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false }
        }
      },
      "HotelBenefitsLink": {
        "title": "HotelBenefitsLink",
        "required": ["hotel_id", "benefit_id"],
        "type": "object",
        "properties": {
          "hotel_id": {
            "title": "Hotel Id",
            "anyOf": [{ "type": "string", "format": "uuid4" }, { "type": "string" }]
          },
          "benefit_id": {
            "title": "Benefit Id",
            "anyOf": [{ "type": "string", "format": "uuid4" }, { "type": "string" }]
          }
        }
      },
      "HotelBenefitsResponse": {
        "title": "HotelBenefitsResponse",
        "required": ["name", "id"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "icon": { "title": "Icon", "type": "string", "format": "binary" },
          "description": { "title": "Description", "type": "string" },
          "is_popular": { "title": "Is Popular", "type": "boolean", "default": false },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "HotelBenefitsUpdateRequest": {
        "title": "HotelBenefitsUpdateRequest",
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "icon": { "title": "Icon", "type": "string", "format": "binary" },
          "description": { "title": "Description", "type": "string" },
          "is_popular": { "title": "Is Popular", "type": "boolean", "default": false },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false }
        }
      },
      "HotelContactsResponse": {
        "title": "HotelContactsResponse",
        "required": ["contact_type", "first_name", "last_name", "email", "phone", "hotel_id", "id"],
        "type": "object",
        "properties": {
          "contact_type": { "$ref": "#/components/schemas/ContactTypes" },
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "email": { "title": "Email", "type": "string" },
          "phone": { "title": "Phone", "type": "string" },
          "custom_name": { "title": "Custom Name", "type": "string" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "HotelContactsUpdateRequest": {
        "title": "HotelContactsUpdateRequest",
        "required": ["contact_type", "first_name", "last_name", "email", "phone"],
        "type": "object",
        "properties": {
          "contact_type": { "$ref": "#/components/schemas/ContactTypes" },
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "email": { "title": "Email", "type": "string" },
          "phone": { "title": "Phone", "type": "string" },
          "custom_name": { "title": "Custom Name", "type": "string" }
        }
      },
      "HotelFullResponse": {
        "title": "HotelFullResponse",
        "required": ["account_id", "id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "state": { "$ref": "#/components/schemas/HotelStateTypes" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "account_id": { "title": "Account Id", "type": "string", "format": "uuid4" },
          "code": { "title": "Code", "type": "string" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "address": { "$ref": "#/components/schemas/HotelAddressResponse" },
          "photos": {
            "title": "Photos",
            "type": "array",
            "items": { "$ref": "#/components/schemas/HotelPhotosResponse" }
          },
          "benefits": {
            "title": "Benefits",
            "type": "array",
            "items": { "$ref": "#/components/schemas/HotelBenefitsResponse" }
          },
          "accommodation": { "$ref": "#/components/schemas/HotelAccommodations" },
          "contacts": {
            "title": "Contacts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/HotelContactsResponse" }
          },
          "messengers": { "$ref": "#/components/schemas/HotelMessengersResponse" }
        }
      },
      "HotelListResponse": {
        "title": "HotelListResponse",
        "required": ["count"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/HotelResponse" }
          },
          "count": { "title": "Count", "type": "integer" }
        }
      },
      "HotelMessengersResponse": {
        "title": "HotelMessengersResponse",
        "required": ["hotel_id", "id"],
        "type": "object",
        "properties": {
          "telegram": { "title": "Telegram", "type": "boolean", "default": false },
          "whatsup": { "title": "Whatsup", "type": "boolean", "default": false },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "HotelMessengersUpdateRequest": {
        "title": "HotelMessengersUpdateRequest",
        "type": "object",
        "properties": {
          "telegram": { "title": "Telegram", "type": "boolean", "default": false },
          "whatsup": { "title": "Whatsup", "type": "boolean", "default": false }
        }
      },
      "HotelPhotosResponse": {
        "title": "HotelPhotosResponse",
        "required": ["is_active", "url", "preview", "hotel_id", "id"],
        "type": "object",
        "properties": {
          "is_active": { "title": "Is Active", "type": "boolean" },
          "url": { "title": "Url", "type": "string" },
          "preview": { "title": "Preview", "type": "string" },
          "hotel_id": {
            "title": "Hotel Id",
            "anyOf": [{ "type": "string", "format": "uuid4" }, { "type": "string" }]
          },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "HotelPhotosUpdateRequest": {
        "title": "HotelPhotosUpdateRequest",
        "required": ["is_active"],
        "type": "object",
        "properties": { "is_active": { "title": "Is Active", "type": "boolean" } }
      },
      "HotelResponse": {
        "title": "HotelResponse",
        "required": ["account_id", "id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "state": { "$ref": "#/components/schemas/HotelStateTypes" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "account_id": { "title": "Account Id", "type": "string", "format": "uuid4" },
          "code": { "title": "Code", "type": "string" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "HotelStateTypes": {
        "title": "HotelStateTypes",
        "enum": [
          "Not_Started",
          "Set_Name",
          "Set_Address",
          "Set_Photos",
          "Set_Benefits",
          "Set_Accommodations",
          "Set_Contacts",
          "Completed"
        ],
        "description": "An enumeration."
      },
      "HotelUpdateRequest": {
        "title": "HotelUpdateRequest",
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "state": { "$ref": "#/components/schemas/HotelStateTypes" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false }
        }
      },
      "JwtToken": {
        "title": "JwtToken",
        "required": ["access_token", "refresh_token"],
        "type": "object",
        "properties": {
          "access_token": { "title": "Access Token", "type": "string" },
          "refresh_token": { "title": "Refresh Token", "type": "string" }
        }
      },
      "NewPasswordIn": {
        "title": "NewPasswordIn",
        "required": ["password"],
        "type": "object",
        "properties": { "password": { "title": "Password", "type": "string" } }
      },
      "OrderCreateRequest": {
        "title": "OrderCreateRequest",
        "required": [
          "status_type",
          "payment_type",
          "service_type",
          "order_items",
          "hotel_id",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "status_type": { "$ref": "#/components/schemas/StatusTypes" },
          "payment_type": { "$ref": "#/components/schemas/PaymentTypes" },
          "service_type": { "$ref": "#/components/schemas/RoomServicesTypes" },
          "order_items": {
            "title": "Order Items",
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItemsCreateRequest" }
          },
          "admin_id": { "title": "Admin Id", "type": "string", "format": "uuid" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid" },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "comments": { "title": "Comments", "type": "string" },
          "date": { "title": "Date", "type": "string", "format": "date" },
          "administration_comment": { "title": "Administration Comment", "type": "string" }
        }
      },
      "OrderDeclineRequest": {
        "title": "OrderDeclineRequest",
        "type": "object",
        "properties": {
          "administration_comment": { "title": "Administration Comment", "type": "string" }
        }
      },
      "OrderFullResponse": {
        "title": "OrderFullResponse",
        "required": [
          "status_type",
          "payment_type",
          "service_type",
          "order_items",
          "hotel_id",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "status_type": { "$ref": "#/components/schemas/StatusTypes" },
          "payment_type": { "$ref": "#/components/schemas/PaymentTypes" },
          "service_type": { "$ref": "#/components/schemas/RoomServicesTypes" },
          "order_items": {
            "title": "Order Items",
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItemsCreateRequest" }
          },
          "admin_id": { "title": "Admin Id", "type": "string", "format": "uuid" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid" },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "comments": { "title": "Comments", "type": "string" },
          "date": { "title": "Date", "type": "string", "format": "date" },
          "administration_comment": { "title": "Administration Comment", "type": "string" }
        }
      },
      "OrderItemsCreateRequest": {
        "title": "OrderItemsCreateRequest",
        "required": ["order_id", "room_service_id", "amount"],
        "type": "object",
        "properties": {
          "order_id": { "title": "Order Id", "type": "string", "format": "uuid" },
          "menu_item_id": { "title": "Menu Item Id", "type": "string", "format": "uuid" },
          "menu_id": { "title": "Menu Id", "type": "string", "format": "uuid" },
          "room_service_id": { "title": "Room Service Id", "type": "string", "format": "uuid" },
          "room_upgrade_id": { "title": "Room Upgrade Id", "type": "string", "format": "uuid" },
          "amount": { "title": "Amount", "type": "integer" }
        }
      },
      "OrderPrice": {
        "title": "OrderPrice",
        "required": ["subtotal_value", "discount_value", "voucher_value", "total_value"],
        "type": "object",
        "properties": {
          "subtotal_value": { "title": "Subtotal Value", "type": "number" },
          "discount_value": { "title": "Discount Value", "type": "number" },
          "voucher_value": { "title": "Voucher Value", "type": "number" },
          "total_value": { "title": "Total Value", "type": "number" }
        }
      },
      "OrderUpdateRequest": {
        "title": "OrderUpdateRequest",
        "type": "object",
        "properties": {
          "admin_id": {
            "title": "Admin Id",
            "anyOf": [{ "type": "string", "format": "uuid" }, { "type": "string" }]
          },
          "status_type": { "$ref": "#/components/schemas/StatusTypes" }
        }
      },
      "PasswordIn": {
        "title": "PasswordIn",
        "required": ["username", "password"],
        "type": "object",
        "properties": {
          "username": { "title": "Username", "type": "string" },
          "password": { "title": "Password", "type": "string" }
        }
      },
      "PaymentTypes": {
        "title": "PaymentTypes",
        "enum": ["card", "cash", "online"],
        "description": "An enumeration."
      },
      "RefreshToken": {
        "title": "RefreshToken",
        "required": ["refresh_token"],
        "type": "object",
        "properties": { "refresh_token": { "title": "Refresh Token", "type": "string" } }
      },
      "RoomBedsCreateRequest": {
        "title": "RoomBedsCreateRequest",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false }
        }
      },
      "RoomBedsLinkRequest": {
        "title": "RoomBedsLinkRequest",
        "required": ["room_id", "bed_id"],
        "type": "object",
        "properties": {
          "room_id": { "title": "Room Id", "type": "string", "format": "uuid4" },
          "bed_id": { "title": "Bed Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomBedsResponse": {
        "title": "RoomBedsResponse",
        "required": ["name", "id"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomBenefitsCreateRequest": {
        "title": "RoomBenefitsCreateRequest",
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_popular": { "title": "Is Popular", "type": "boolean", "default": false },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false }
        }
      },
      "RoomBenefitsLink": {
        "title": "RoomBenefitsLink",
        "required": ["room_id", "benefit_id"],
        "type": "object",
        "properties": {
          "room_id": { "title": "Room Id", "type": "string", "format": "uuid4" },
          "benefit_id": { "title": "Benefit Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomBenefitsResponse": {
        "title": "RoomBenefitsResponse",
        "required": ["name", "id"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_popular": { "title": "Is Popular", "type": "boolean", "default": false },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomBenefitsUpdateRequest": {
        "title": "RoomBenefitsUpdateRequest",
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_popular": { "title": "Is Popular", "type": "boolean", "default": false },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false }
        }
      },
      "RoomCategoryTypes": {
        "title": "RoomCategoryTypes",
        "enum": ["single", "double"],
        "description": "An enumeration."
      },
      "RoomPhotosResponse": {
        "title": "RoomPhotosResponse",
        "required": ["is_active", "url", "preview", "room_id", "id"],
        "type": "object",
        "properties": {
          "is_active": { "title": "Is Active", "type": "boolean" },
          "url": { "title": "Url", "type": "string" },
          "preview": { "title": "Preview", "type": "string" },
          "room_id": { "title": "Room Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomPhotosUpdateRequest": {
        "title": "RoomPhotosUpdateRequest",
        "required": ["is_active"],
        "type": "object",
        "properties": { "is_active": { "title": "Is Active", "type": "boolean" } }
      },
      "RoomServiceCreateRequest": {
        "title": "RoomServiceCreateRequest",
        "required": ["is_active", "service_type", "hotel_id"],
        "type": "object",
        "properties": {
          "description": { "title": "Description", "type": "string" },
          "custom_name": { "title": "Custom Name", "type": "string" },
          "price": { "title": "Price", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "service_type": { "$ref": "#/components/schemas/RoomServicesTypes" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomServiceFullResponse": {
        "title": "RoomServiceFullResponse",
        "required": ["is_active", "service_type", "hotel_id", "id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "description": { "title": "Description", "type": "string" },
          "custom_name": { "title": "Custom Name", "type": "string" },
          "price": { "title": "Price", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "service_type": { "$ref": "#/components/schemas/RoomServicesTypes" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "menu": {
            "title": "Menu",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoomServiceMenuFullResponse" }
          }
        }
      },
      "RoomServiceMenuFullResponse": {
        "title": "RoomServiceMenuFullResponse",
        "required": ["name", "is_active", "room_service_id"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "room_service_id": { "title": "Room Service Id", "type": "string", "format": "uuid4" },
          "items": {
            "title": "Items",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoomServiceMenuItemResponse" }
          }
        }
      },
      "RoomServiceMenuItemResponse": {
        "title": "RoomServiceMenuItemResponse",
        "required": ["name", "price", "is_active", "menu_id", "id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "price": { "title": "Price", "type": "string" },
          "discount_price": { "title": "Discount Price", "type": "string" },
          "extra_price": { "title": "Extra Price", "type": "string" },
          "weight": { "title": "Weight", "type": "string" },
          "duration": { "title": "Duration", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "menu_id": { "title": "Menu Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomServiceMenuItemUpdateRequest": {
        "title": "RoomServiceMenuItemUpdateRequest",
        "required": ["name", "price", "is_active"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "price": { "title": "Price", "type": "string" },
          "discount_price": { "title": "Discount Price", "type": "string" },
          "extra_price": { "title": "Extra Price", "type": "string" },
          "weight": { "title": "Weight", "type": "string" },
          "duration": { "title": "Duration", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" }
        }
      },
      "RoomServiceMenuResponse": {
        "title": "RoomServiceMenuResponse",
        "required": ["name", "is_active", "room_service_id", "id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "room_service_id": { "title": "Room Service Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomServiceMenuUpdateRequest": {
        "title": "RoomServiceMenuUpdateRequest",
        "required": ["name", "is_active"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" }
        }
      },
      "RoomServiceResponse": {
        "title": "RoomServiceResponse",
        "required": ["is_active", "service_type", "hotel_id", "id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "description": { "title": "Description", "type": "string" },
          "custom_name": { "title": "Custom Name", "type": "string" },
          "price": { "title": "Price", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "service_type": { "$ref": "#/components/schemas/RoomServicesTypes" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomServiceUpdateRequest": {
        "title": "RoomServiceUpdateRequest",
        "required": ["is_active"],
        "type": "object",
        "properties": {
          "description": { "title": "Description", "type": "string" },
          "custom_name": { "title": "Custom Name", "type": "string" },
          "price": { "title": "Price", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" }
        }
      },
      "RoomServicesTypes": {
        "title": "RoomServicesTypes",
        "enum": ["order_food", "upgrade_room", "laundry", "spa", "other"],
        "description": "An enumeration."
      },
      "RoomsCreateRequest": {
        "title": "RoomsCreateRequest",
        "required": ["home_pet_allowed", "pet_weight", "pet_deposit", "guest_amount", "hotel_id"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "category_type": { "$ref": "#/components/schemas/RoomCategoryTypes" },
          "room_amount": { "title": "Room Amount", "type": "integer", "default": 1 },
          "room_size": { "title": "Room Size", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "home_pet_allowed": { "title": "Home Pet Allowed", "type": "boolean" },
          "pet_weight": { "title": "Pet Weight", "type": "string" },
          "pet_deposit": { "title": "Pet Deposit", "type": "string" },
          "guest_amount": { "title": "Guest Amount", "type": "integer" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomsFullResponse": {
        "title": "RoomsFullResponse",
        "required": [
          "home_pet_allowed",
          "pet_weight",
          "pet_deposit",
          "guest_amount",
          "hotel_id",
          "id"
        ],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "category_type": { "$ref": "#/components/schemas/RoomCategoryTypes" },
          "room_amount": { "title": "Room Amount", "type": "integer", "default": 1 },
          "room_size": { "title": "Room Size", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "home_pet_allowed": { "title": "Home Pet Allowed", "type": "boolean" },
          "pet_weight": { "title": "Pet Weight", "type": "string" },
          "pet_deposit": { "title": "Pet Deposit", "type": "string" },
          "guest_amount": { "title": "Guest Amount", "type": "integer" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "beds": {
            "title": "Beds",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoomBedsResponse" }
          },
          "benefits": {
            "title": "Benefits",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoomBenefitsResponse" }
          },
          "photos": {
            "title": "Photos",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoomPhotosResponse" }
          }
        }
      },
      "RoomsResponse": {
        "title": "RoomsResponse",
        "required": [
          "home_pet_allowed",
          "pet_weight",
          "pet_deposit",
          "guest_amount",
          "hotel_id",
          "id"
        ],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "category_type": { "$ref": "#/components/schemas/RoomCategoryTypes" },
          "room_amount": { "title": "Room Amount", "type": "integer", "default": 1 },
          "room_size": { "title": "Room Size", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "home_pet_allowed": { "title": "Home Pet Allowed", "type": "boolean" },
          "pet_weight": { "title": "Pet Weight", "type": "string" },
          "pet_deposit": { "title": "Pet Deposit", "type": "string" },
          "guest_amount": { "title": "Guest Amount", "type": "integer" },
          "hotel_id": { "title": "Hotel Id", "type": "string", "format": "uuid4" },
          "id": { "title": "Id", "type": "string", "format": "uuid4" }
        }
      },
      "RoomsUpdateRequest": {
        "title": "RoomsUpdateRequest",
        "required": ["home_pet_allowed", "pet_weight", "pet_deposit", "guest_amount"],
        "type": "object",
        "properties": {
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "category_type": { "$ref": "#/components/schemas/RoomCategoryTypes" },
          "room_amount": { "title": "Room Amount", "type": "integer", "default": 1 },
          "room_size": { "title": "Room Size", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean", "default": false },
          "home_pet_allowed": { "title": "Home Pet Allowed", "type": "boolean" },
          "pet_weight": { "title": "Pet Weight", "type": "string" },
          "pet_deposit": { "title": "Pet Deposit", "type": "string" },
          "guest_amount": { "title": "Guest Amount", "type": "integer" }
        }
      },
      "StatusResponse": {
        "title": "StatusResponse",
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": { "title": "Status", "enum": ["ok", "fail"], "type": "string" },
          "details": { "title": "Details", "type": "string" }
        }
      },
      "StatusTypes": {
        "title": "StatusTypes",
        "enum": ["new", "in-progress", "completed", "cancelled", "rejected"],
        "description": "An enumeration."
      },
      "UserCreateRequest": {
        "title": "UserCreateRequest",
        "required": ["username"],
        "type": "object",
        "properties": { "username": { "title": "Username", "type": "string" } }
      },
      "UserFullResponse": {
        "title": "UserFullResponse",
        "required": [
          "id",
          "username",
          "is_active",
          "is_deleted",
          "created_at",
          "updated_at",
          "info"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "username": { "title": "Username", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "created_at": { "title": "Created At", "type": "string", "format": "date-time" },
          "updated_at": { "title": "Updated At", "type": "string", "format": "date-time" },
          "info": { "$ref": "#/components/schemas/UserInfoResponse" }
        }
      },
      "UserInfoResponse": {
        "title": "UserInfoResponse",
        "type": "object",
        "properties": {
          "is_phone_verified": {
            "title": "Is Phone Verified",
            "type": "boolean",
            "default": false
          },
          "is_email_verified": {
            "title": "Is Email Verified",
            "type": "boolean",
            "default": false
          },
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "birthday": { "title": "Birthday", "type": "string", "format": "date-time" }
        }
      },
      "UserInfoUpdateEmailRequest": {
        "title": "UserInfoUpdateEmailRequest",
        "type": "object",
        "properties": { "email": { "title": "Email", "type": "string" } }
      },
      "UserInfoUpdateRequest": {
        "title": "UserInfoUpdateRequest",
        "type": "object",
        "properties": {
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "birthday": { "title": "Birthday", "type": "string", "format": "date-time" }
        }
      },
      "UserResponse": {
        "title": "UserResponse",
        "required": ["id", "username", "is_active", "is_deleted", "created_at", "updated_at"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string", "format": "uuid4" },
          "username": { "title": "Username", "type": "string" },
          "is_active": { "title": "Is Active", "type": "boolean" },
          "is_deleted": { "title": "Is Deleted", "type": "boolean" },
          "created_at": { "title": "Created At", "type": "string", "format": "date-time" },
          "updated_at": { "title": "Updated At", "type": "string", "format": "date-time" }
        }
      },
      "UsernameIn": {
        "title": "UsernameIn",
        "required": ["username"],
        "type": "object",
        "properties": { "username": { "title": "Username", "type": "string" } }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "JWTokenAuth": { "type": "apiKey", "in": "header", "name": "Authorization" }
    }
  }
}
